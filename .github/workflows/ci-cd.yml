name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Cambia a "master" si tu rama principal es "master"
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest

    steps:
    # Paso 1: Checkout del código
    - name: Checkout code
      uses: actions/checkout@v2

    # Paso 2: Configurar JDK 23
    - name: Set up JDK 23
      uses: actions/setup-java@v2
      with:
        distribution: 'temurin'
        java-version: '23'

    # Paso 3: Construcción con Ant
    - name: Build with Ant
      run: ant -f build.xml clean jar

    # Paso 4: Escaneo de vulnerabilidades con OWASP Dependency-Check
    - name: Run OWASP Dependency-Check
      run: |
        curl -LO https://github.com/jeremylong/DependencyCheck/releases/download/v6.5.0/dependency-check-6.5.0-release.zip
        unzip dependency-check-6.5.0-release.zip -d dependency-check
        cd dependency-check/dependency-check
        cmd /c bin\\dependency-check.bat --project CI-CD-Scan --out ../../reports --scan ../../

    # Paso 5: Desplegar en VM Windows usando PowerShell Remoting
    - name: Deploy to VM with PowerShell Remoting
      shell: pwsh
      env:
        VM_USER: ${{ secrets.VM_USER }}
        VM_IP: ${{ secrets.VM_IP }}
        VM_PASSWORD: ${{ secrets.VM_PASSWORD }}
      run: |
        $password = ConvertTo-SecureString $env:VM_PASSWORD -AsPlainText -Force
        $credential = New-Object System.Management.Automation.PSCredential ($env:VM_USER, $password)

        # Crear sesión remota a la VM
        $session = New-PSSession -ComputerName $env:VM_IP -Credential $credential -Authentication Basic -UseSSL

        # Crear la carpeta de destino si no existe
        Invoke-Command -Session $session -ScriptBlock {
          if (!(Test-Path -Path 'C:\Users\ML\Desktop\Pruebas')) {
            New-Item -ItemType Directory -Path 'C:\Users\ML\Desktop\Pruebas'
          }
        }

        # Copiar el archivo JAR a la VM Windows
        Copy-Item -Path dist\Login.jar -Destination "C:\Users\ML\Desktop\Pruebas\Login.jar" -ToSession $session

        # Ejecutar la aplicación en la VM Windows
        Invoke-Command -Session $session -ScriptBlock {
          Start-Process -NoNewWindow -FilePath 'java' -ArgumentList '-jar', 'C:\Users\ML\Desktop\Pruebas\Login.jar'
        }

        # Cerrar la sesión remota
        Remove-PSSession -Session $session

