name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest

    steps:
    # Paso 1: Checkout del código
    - name: Checkout code
      uses: actions/checkout@v2

    # Paso 2: Configurar JDK 23
    - name: Set up JDK 23
      uses: actions/setup-java@v2
      with:
        distribution: 'temurin'
        java-version: '23'

    # Paso 3: Construcción con Ant
    - name: Build with Ant
      run: ant -f build.xml clean jar

    # Paso 4: Ejecutar pruebas con Ant
    - name: Run tests with Ant
      run: ant -f build.xml test

    # Paso 5: Escaneo de vulnerabilidades con OWASP Dependency-Check
    - name: Run OWASP Dependency-Check
      run: |
        curl -LO https://github.com/jeremylong/DependencyCheck/releases/download/v6.5.0/dependency-check-6.5.0-release.zip
        unzip dependency-check-6.5.0-release.zip -d dependency-check
        ./dependency-check/bin/dependency-check.bat --project CI-CD-Scan --out reports --scan .

    # Paso 6: Desplegar en VM Windows usando WinRM
    - name: Deploy to VM with WinRM
      uses: m1nt-co/pswinrm@v1
      with:
        host: ${{ secrets.VM_IP }}
        username: ${{ secrets.VM_USER }}
        password: ${{ secrets.VM_PASSWORD }}
        script: |
          # Crear la carpeta de destino si no existe
          if (!(Test-Path -Path 'C:\Users\ML\Desktop\Pruebas')) {
            New-Item -ItemType Directory -Path 'C:\Users\ML\Desktop\Pruebas'
          }

          # Copiar el archivo JAR generado a la VM Windows
          Copy-Item -Path dist\Login.jar -Destination 'C:\Users\ML\Desktop\Pruebas\Login.jar'

          # Ejecutar la aplicación en la VM Windows
          Start-Process -NoNewWindow -FilePath 'java' -ArgumentList '-jar', 'C:\Users\ML\Desktop\Pruebas\Login.jar'

